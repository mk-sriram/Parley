"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _dateUtils = require("./dateUtils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function DayRange({
  leftCrop,
  rightCrop,
  inRange,
  selectColor
}) {
  const bothWays = inRange && leftCrop && rightCrop;
  const isCrop = inRange && (leftCrop || rightCrop) && !(leftCrop && rightCrop);
  if (inRange || isCrop) {
    return /*#__PURE__*/React.createElement(_reactNative.View, {
      pointerEvents: "none",
      style: [_reactNative.StyleSheet.absoluteFill, styles.rangeRoot, bothWays && styles.rangeRootBoth, inRange && !isCrop ? {
        backgroundColor: selectColor
      } : null]
    }, isCrop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [styles.rightCrop, rightCrop ? {
        backgroundColor: selectColor
      } : null]
    }), /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [{
        backgroundColor: selectColor,
        minWidth: _dateUtils.daySize,
        minHeight: _dateUtils.daySize
      }, leftCrop ? styles.leftRadius : null, rightCrop ? styles.rightRadius : null]
    }), /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [styles.flex1, leftCrop ? {
        backgroundColor: selectColor
      } : null]
    })));
  }
  return null;
}
const styles = _reactNative.StyleSheet.create({
  leftRadius: {
    borderBottomLeftRadius: _dateUtils.daySize / 2,
    borderTopLeftRadius: _dateUtils.daySize / 2
  },
  rightRadius: {
    borderBottomRightRadius: _dateUtils.daySize / 2,
    borderTopRightRadius: _dateUtils.daySize / 2
  },
  rangeRootBoth: {
    borderRadius: _dateUtils.daySize / 2
  },
  flex1: {
    flex: 1
  },
  rangeRoot: {
    flexDirection: 'row'
  },
  rightCrop: {
    flexBasis: 5
  }
});
var _default = exports.default = /*#__PURE__*/React.memo(DayRange);
//# sourceMappingURL=DayRange.js.map