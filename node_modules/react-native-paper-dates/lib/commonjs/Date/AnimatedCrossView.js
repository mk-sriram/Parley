"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AnimatedCrossView;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativePaper = require("react-native-paper");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function AnimatedCrossView({
  collapsed,
  calendar,
  calendarEdit
}) {
  const theme = (0, _reactNativePaper.useTheme)();
  const calendarOpacity = React.useRef(new _reactNative.Animated.Value(collapsed ? 1 : 0));
  React.useEffect(() => {
    _reactNative.Animated.timing(calendarOpacity.current, {
      toValue: collapsed ? 1 : 0,
      duration: 250,
      useNativeDriver: true
    }).start();
  }, [collapsed]);
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: styles.root
  }, /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
    pointerEvents: collapsed ? 'auto' : 'none',
    style: [styles.calendar, {
      opacity: calendarOpacity.current,
      transform: [{
        scaleY: calendarOpacity.current.interpolate({
          inputRange: [0, 1],
          outputRange: [0.85, 1]
        })
      }, {
        scaleX: calendarOpacity.current.interpolate({
          inputRange: [0, 1],
          outputRange: [0.95, 1]
        })
      }]
    }]
  }, calendar), /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
    pointerEvents: collapsed ? 'none' : 'auto',
    style: [styles.calendarEdit, {
      backgroundColor: theme.colors.surface,
      opacity: calendarOpacity.current.interpolate({
        inputRange: [0, 1],
        outputRange: [1, 0]
      }),
      transform: [{
        scale: calendarOpacity.current.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0.95]
        })
      }]
    }]
  }, calendarEdit));
}
const styles = _reactNative.StyleSheet.create({
  root: {
    flex: 1
  },
  calendarEdit: {
    position: 'absolute',
    left: 0,
    right: 0
  },
  calendar: {
    flex: 1
  }
});
//# sourceMappingURL=AnimatedCrossView.js.map